---
- name: "require Debian"
  assert:
    that:
      - ansible_distribution == "Debian"
    msg: "Only Debian is supported, this is {{ ansible_distribution }}"

- name: "install unattended-upgrades package"
  package:
    name: unattended-upgrades

- name: "enable periodic updates"
  copy:
    dest: /etc/apt/apt.conf.d/20auto-upgrades
    src: /usr/share/unattended-upgrades/20auto-upgrades
    remote_src: yes

- name: "set Unattended-Upgrade::Mail to root"
  lineinfile:
    path: /etc/apt/apt.conf.d/50unattended-upgrades
    regexp: 'Unattended-Upgrade::Mail "'
    line:   'Unattended-Upgrade::Mail "root";'

- name: "set Unattended-Upgrade::MailOnlyOnError true"
  lineinfile:
    path: /etc/apt/apt.conf.d/50unattended-upgrades
    regexp: 'Unattended-Upgrade::MailOnlyOnError "'
    line:   'Unattended-Upgrade::MailOnlyOnError "true";'

# see https://www.debian.org/doc/debian-policy/ch-customized-programs.html#s-mail-transport-agents
- name: "check existence of /usr/sbin/sendmail"
  stat:
    path: /usr/sbin/sendmail
  register: p

- name: "install MTA package {{ unattended_upgrades_mta_package }}"
  when: not p.stat.exists
  package:
    name: "{{ unattended_upgrades_mta_package }}"
    state: present

# unattended-upgrades tries first sendmail, then mail command
# see https://github.com/mvo5/unattended-upgrades/blob/2.9/unattended-upgrade#L1508
- name: "check existence of /usr/bin/mail"
  stat:
    path: /usr/bin/mail
  register: p

- name: "install package providing the mail command"
  when: not p.stat.exists
  package:
    name: "{{ unattended_upgrades_mail_package }}"
    state: present
